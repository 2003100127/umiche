import random
import numpy as np
import pandas as pd
import networkx as nx
import matplotlib.pyplot as plt
import matplotlib.colors as mcolors
color = mcolors.CSS4_COLORS
palette = np.random.permutation([*color.keys()]).tolist()
# palette = ['firebrick', 'springgreen', 'burlywood', 'oldlace', 'lightgoldenrodyellow', 'grey', 'cyan', 'crimson', 'mediumvioletred', 'maroon', 'mediumturquoise', 'teal', 'azure', 'palevioletred', 'mediumslateblue', 'olivedrab', 'darkred', 'dimgrey', 'lightgreen', 'blueviolet', 'chartreuse', 'whitesmoke', 'mediumspringgreen', 'yellowgreen', 'green', 'darkorchid', 'lawngreen', 'black', 'darkgoldenrod', 'moccasin', 'seashell', 'orange', 'slateblue', 'hotpink', 'tan', 'darkolivegreen', 'mediumorchid', 'darkgreen', 'navajowhite', 'khaki', 'paleturquoise', 'darkgray', 'darkorange', 'salmon', 'floralwhite', 'lightgray', 'darkblue', 'lightslategray', 'darkslateblue', 'goldenrod', 'lightcyan', 'papayawhip', 'wheat', 'lightslategrey', 'darksalmon', 'skyblue', 'violet', 'coral', 'mediumseagreen', 'darkmagenta', 'palegreen', 'magenta', 'lavenderblush', 'darkkhaki', 'darkturquoise', 'lightsalmon', 'blanchedalmond', 'deepskyblue', 'mediumaquamarine', 'mintcream', 'lightyellow', 'linen', 'peachpuff', 'aliceblue', 'gold', 'ghostwhite', 'silver', 'bisque', 'aquamarine', 'lightblue', 'lavender', 'antiquewhite', 'dimgray', 'lightskyblue', 'pink', 'beige', 'indianred', 'rosybrown', 'rebeccapurple', 'lightgrey', 'powderblue', 'chocolate', 'darkgrey', 'purple', 'darkslategrey', 'cornsilk', 'turquoise', 'blue', 'greenyellow', 'red', 'lime', 'ivory', 'royalblue', 'palegoldenrod', 'lightsteelblue', 'slategray', 'gray', 'brown', 'mistyrose', 'cornflowerblue', 'tomato', 'indigo', 'snow', 'darkslategray', 'lightpink', 'darkviolet', 'limegreen', 'honeydew', 'yellow', 'sienna', 'mediumblue', 'fuchsia', 'forestgreen', 'orchid', 'plum', 'lemonchiffon', 'gainsboro', 'sandybrown', 'slategrey', 'mediumpurple', 'saddlebrown', 'lightcoral', 'midnightblue', 'navy', 'thistle', 'dodgerblue', 'lightseagreen', 'darkseagreen', 'cadetblue', 'seagreen', 'darkcyan', 'steelblue', 'white', 'peru', 'deeppink', 'olive', 'firebrick', 'aqua', 'orangered']
print(palette)


# ccs = {0: [0, 5, 9, 10, 25, 51, 56, 69, 79, 81, 91, 110, 36, 38, 55, 59, 127, 146, 172, 2, 20, 33, 47, 120, 159, 221, 223, 8, 49, 75, 115, 153, 166, 199, 17, 22, 67, 119, 189, 53, 60, 93, 94, 182, 196, 23, 26, 73, 147, 170, 177, 229, 61, 65, 103, 122, 126, 194, 90, 161, 80, 231, 52, 152, 3, 42, 137, 209, 71, 82, 139, 145, 206, 7, 63, 64, 95, 165, 227, 205, 15, 167, 197, 211, 48, 54, 98, 16, 34, 37, 136, 144, 31, 35, 44, 58, 129, 113, 248, 188, 202, 222, 18, 30, 41, 11, 87, 13, 191, 96, 66, 164, 225, 244, 24, 150, 4, 111, 158, 21, 216, 108, 14, 43, 76, 133, 207, 121, 224, 102, 178, 192, 19, 50, 233, 97, 104, 105, 138, 208, 1, 99, 156, 204, 238, 215, 141, 83, 109, 92, 236, 251, 203, 143, 198, 101, 187, 243, 132, 151, 232, 242, 240, 114, 157, 176, 200, 70, 128, 116, 186, 74, 45, 173, 168, 214, 217, 148, 32, 149, 154, 247, 140, 39, 46, 100, 241, 6, 134, 160, 28, 171, 212, 135, 68, 162, 220, 237, 184, 195, 226, 245, 123, 88, 117, 27, 118, 180, 175, 228, 163, 174, 57, 85, 218, 89, 246, 84, 210, 219, 230, 239, 179, 183, 190, 142, 29, 125, 107, 155, 72, 106, 77, 40, 131, 169, 112, 201, 213, 250, 193, 181, 130], 1: [12, 185], 2: [62], 3: [78], 4: [86], 5: [124], 6: [234], 7: [235], 8: [249]}
ccs = {0: [0, 5, 10, 25, 79, 59, 49, 75, 17, 37, 18, 87], 1: [9, 69, 120, 61, 103, 194, 109, 92], 2: [51, 56, 127, 199, 60, 94, 147, 167, 24, 150, 121, 224, 192], 3: [81, 2, 23, 73, 229, 231, 4, 158, 97, 105, 138, 208, 99, 156, 238, 163], 4: [91, 159, 67, 80, 216, 108, 101, 187], 5: [110, 170, 52, 152, 222, 141, 83], 6: [36, 55, 209, 64, 95, 165, 227, 164, 168], 7: [38, 172, 206, 116, 186, 210, 183, 142, 112], 8: [146, 211, 148], 9: [20, 223, 153, 139, 54, 16, 34, 136, 149, 100, 241, 6, 134, 160, 190, 72, 193], 10: [33, 47, 221, 119, 189, 93, 182, 3, 31, 44, 129, 188, 202, 21, 14, 43, 207, 50, 28, 171, 212, 27, 118], 11: [8, 115, 166, 22, 65, 82, 7, 144, 30, 11, 13, 96, 66, 225, 178, 74, 195, 226, 245], 12: [53, 196, 35, 76, 133, 19, 233], 13: [26, 244, 102, 204, 45, 237, 123, 180, 175, 228, 169], 14: [177, 122, 90, 161, 113, 248, 104, 1, 236, 251, 143, 198, 174, 85, 89, 246], 15: [126, 215, 203, 218], 16: [42, 232, 157, 84], 17: [137, 197, 243, 242, 214, 217, 57], 18: [71, 145, 63, 58, 114, 176, 70, 128, 173, 219, 230, 179, 29], 19: [205, 15, 41, 191, 132, 151, 240, 135, 68, 162, 220, 184, 88, 106, 77, 181], 20: [48, 32, 154, 247, 125, 201], 21: [98, 200, 140, 39, 46, 239, 107, 155, 213, 250, 130], 22: [111, 117, 40, 131], 23: [12, 185], 24: [62], 25: [78], 26: [86], 27: [124], 28: [234], 29: [235], 30: [249]}
# ccs = {0: [5, 51, 36, 38, 53, 8, 42, 81, 71, 9, 20, 44, 41], 1: [91], 2: [170, 48, 197, 111], 3: [211], 4: [26], 5: [122], 6: [218], 7: [98], 8: [12], 9: [62], 10: [78], 11: [86], 12: [124], 13: [234], 14: [235], 15: [249]}
ccs = [*ccs.values()]
edge_list = [[0, 5], [0, 9], [0, 10], [0, 25], [0, 51], [0, 56], [0, 69], [0, 79], [0, 81], [0, 91], [0, 110], [1, 4], [1, 26], [1, 98], [1, 104], [1, 122], [1, 177], [1, 184], [1, 238], [1, 251], [2, 9], [2, 23], [2, 26], [2, 48], [2, 54], [2, 56], [2, 98], [2, 223], [3, 14], [3, 18], [3, 36], [3, 42], [3, 146], [3, 165], [4, 17], [4, 22], [4, 26], [4, 158], [4, 237], [4, 238], [5, 10], [5, 36], [5, 38], [5, 51], [5, 55], [5, 59], [5, 127], [5, 146], [5, 172], [6, 34], [6, 134], [6, 149], [6, 190], [6, 222], [7, 55], [7, 65], [7, 74], [7, 82], [7, 96], [7, 165], [7, 178], [8, 10], [8, 18], [8, 20], [8, 30], [8, 36], [8, 41], [8, 81], [8, 166], [8, 182], [9, 20], [9, 33], [9, 38], [9, 47], [9, 69], [9, 81], [9, 120], [9, 159], [9, 221], [9, 223], [10, 20], [10, 49], [10, 51], [10, 75], [10, 115], [10, 153], [10, 166], [10, 199], [11, 13], [11, 18], [11, 21], [11, 22], [11, 37], [11, 49], [11, 96], [11, 165], [11, 166], [11, 237], [12, 185], [13, 16], [13, 41], [13, 75], [13, 96], [13, 122], [13, 166], [13, 184], [13, 207], [14, 18], [14, 21], [14, 27], [14, 31], [14, 43], [14, 50], [14, 118], [14, 119], [14, 182], [15, 70], [15, 127], [15, 205], [15, 229], [15, 240], [16, 20], [16, 37], [16, 41], [16, 44], [16, 47], [16, 71], [16, 75], [16, 100], [16, 140], [16, 144], [16, 241], [17, 25], [17, 56], [17, 111], [17, 158], [17, 177], [17, 189], [17, 229], [18, 30], [18, 37], [18, 41], [18, 49], [19, 35], [19, 137], [19, 182], [19, 196], [20, 33], [20, 34], [20, 37], [20, 38], [20, 54], [20, 136], [20, 144], [20, 166], [21, 22], [21, 31], [21, 93], [21, 119], [21, 165], [21, 178], [21, 207], [22, 25], [22, 65], [22, 69], [22, 122], [22, 165], [22, 216], [22, 221], [23, 26], [23, 56], [23, 81], [23, 97], [23, 104], [23, 105], [23, 138], [23, 158], [23, 208], [23, 209], [23, 231], [24, 121], [24, 147], [24, 150], [24, 167], [24, 199], [25, 49], [25, 67], [25, 79], [25, 91], [25, 119], [25, 146], [25, 189], [25, 221], [26, 56], [26, 64], [26, 69], [26, 99], [26, 102], [26, 103], [26, 126], [26, 156], [26, 204], [26, 238], [26, 244], [27, 28], [27, 118], [27, 158], [28, 31], [28, 39], [28, 171], [29, 45], [29, 173], [29, 230], [30, 41], [30, 50], [30, 80], [30, 96], [30, 115], [30, 135], [30, 144], [31, 33], [31, 37], [31, 44], [31, 119], [31, 129], [31, 171], [31, 212], [31, 221], [32, 48], [32, 154], [32, 179], [32, 247], [33, 35], [33, 38], [33, 44], [33, 51], [33, 58], [33, 93], [33, 129], [33, 182], [34, 35], [34, 54], [34, 100], [34, 134], [34, 139], [34, 160], [34, 164], [34, 223], [35, 139], [35, 171], [35, 196], [35, 223], [36, 38], [36, 42], [36, 55], [36, 81], [36, 137], [36, 182], [36, 209], [37, 49], [37, 144], [37, 221], [38, 55], [38, 71], [38, 82], [38, 139], [38, 145], [38, 206], [39, 44], [39, 98], [39, 133], [39, 140], [39, 155], [39, 200], [40, 117], [41, 42], [41, 43], [41, 68], [41, 75], [41, 90], [41, 162], [41, 220], [42, 43], [42, 59], [42, 71], [42, 90], [42, 132], [42, 151], [42, 232], [43, 44], [43, 50], [43, 53], [43, 90], [43, 182], [43, 207], [44, 47], [44, 53], [44, 71], [44, 129], [44, 207], [45, 63], [45, 64], [45, 123], [45, 175], [45, 197], [45, 204], [46, 98], [46, 107], [46, 155], [46, 174], [46, 239], [46, 247], [47, 71], [47, 79], [47, 90], [47, 98], [47, 113], [47, 122], [47, 159], [47, 221], [47, 248], [48, 105], [48, 149], [48, 154], [48, 170], [48, 204], [48, 222], [48, 247], [49, 75], [49, 87], [49, 115], [49, 119], [49, 146], [50, 80], [50, 129], [50, 178], [50, 182], [51, 53], [51, 60], [51, 93], [51, 94], [51, 119], [51, 182], [51, 196], [52, 83], [52, 110], [52, 152], [52, 170], [53, 59], [53, 75], [53, 76], [53, 79], [53, 119], [53, 133], [53, 207], [54, 140], [54, 149], [54, 199], [54, 244], [55, 63], [55, 64], [55, 69], [55, 93], [55, 95], [55, 165], [55, 166], [55, 227], [56, 73], [56, 94], [56, 127], [56, 147], [56, 170], [56, 177], [56, 199], [56, 229], [57, 215], [57, 217], [57, 243], [58, 145], [59, 71], [59, 75], [59, 79], [59, 146], [59, 205], [60, 121], [60, 224], [61, 63], [61, 66], [61, 69], [61, 83], [61, 109], [61, 110], [61, 194], [61, 204], [61, 216], [63, 66], [63, 145], [63, 173], [64, 95], [64, 102], [64, 127], [64, 209], [64, 227], [64, 244], [65, 69], [65, 80], [65, 91], [65, 96], [65, 122], [65, 159], [65, 178], [65, 238], [66, 123], [66, 166], [66, 225], [67, 108], [67, 110], [67, 111], [67, 216], [68, 100], [68, 143], [68, 162], [68, 220], [69, 81], [69, 93], [69, 103], [69, 122], [69, 126], [69, 166], [69, 194], [70, 82], [70, 179], [70, 200], [70, 240], [71, 82], [71, 114], [71, 157], [71, 176], [71, 200], [72, 100], [72, 134], [72, 193], [72, 241], [73, 97], [73, 147], [73, 156], [73, 170], [73, 192], [73, 215], [74, 195], [74, 227], [75, 79], [75, 115], [75, 191], [76, 133], [76, 161], [76, 196], [76, 233], [77, 88], [77, 106], [79, 90], [79, 91], [79, 122], [79, 161], [79, 177], [80, 81], [80, 90], [80, 91], [80, 101], [80, 138], [80, 159], [80, 187], [81, 90], [81, 182], [81, 231], [82, 128], [82, 129], [82, 144], [82, 159], [83, 92], [83, 103], [83, 204], [84, 232], [85, 89], [85, 198], [85, 236], [85, 251], [88, 105], [88, 108], [88, 111], [88, 154], [88, 158], [89, 143], [89, 174], [89, 198], [89, 246], [90, 104], [90, 122], [90, 143], [91, 115], [91, 159], [91, 229], [92, 99], [92, 103], [92, 194], [93, 102], [93, 166], [93, 178], [93, 182], [93, 207], [94, 102], [94, 121], [94, 127], [94, 133], [94, 192], [94, 196], [94, 199], [95, 126], [95, 137], [95, 139], [95, 164], [95, 168], [95, 214], [95, 227], [96, 115], [96, 144], [96, 166], [96, 178], [96, 195], [96, 226], [96, 245], [97, 105], [97, 156], [97, 163], [97, 208], [98, 104], [98, 113], [98, 140], [98, 177], [98, 200], [98, 247], [98, 248], [99, 147], [99, 156], [99, 180], [99, 194], [99, 204], [99, 208], [100, 114], [100, 140], [100, 160], [100, 248], [101, 187], [102, 175], [102, 180], [102, 228], [102, 244], [103, 126], [103, 227], [103, 231], [104, 132], [104, 138], [104, 143], [104, 158], [104, 162], [104, 174], [104, 177], [105, 170], [105, 204], [105, 208], [106, 162], [106, 181], [107, 140], [107, 155], [107, 239], [108, 187], [108, 216], [109, 122], [109, 173], [109, 216], [109, 236], [110, 152], [110, 170], [111, 117], [111, 141], [111, 154], [111, 170], [112, 210], [113, 202], [113, 248], [114, 139], [114, 200], [114, 219], [114, 248], [115, 144], [116, 145], [116, 183], [116, 186], [116, 190], [116, 206], [117, 131], [119, 146], [120, 194], [121, 147], [121, 167], [121, 180], [121, 192], [121, 224], [122, 207], [122, 236], [122, 251], [123, 149], [123, 150], [123, 175], [123, 204], [123, 244], [125, 154], [125, 201], [126, 164], [126, 203], [126, 223], [126, 251], [127, 167], [127, 172], [127, 197], [127, 199], [127, 205], [127, 209], [128, 145], [128, 176], [128, 179], [129, 144], [129, 159], [129, 178], [130, 213], [132, 151], [132, 162], [132, 200], [132, 205], [132, 209], [132, 240], [133, 177], [133, 191], [133, 205], [134, 136], [135, 138], [135, 162], [135, 240], [136, 153], [136, 241], [137, 139], [137, 209], [137, 242], [138, 158], [138, 229], [138, 238], [138, 240], [139, 206], [139, 223], [140, 162], [140, 184], [140, 191], [140, 200], [141, 170], [141, 177], [141, 247], [142, 183], [142, 186], [142, 210], [143, 161], [143, 246], [143, 248], [143, 251], [144, 159], [144, 160], [145, 176], [146, 165], [146, 211], [147, 167], [147, 170], [147, 208], [148, 211], [149, 150], [149, 190], [150, 170], [150, 197], [150, 199], [151, 220], [152, 170], [152, 215], [152, 222], [152, 243], [154, 247], [155, 213], [155, 239], [155, 250], [156, 203], [156, 204], [157, 176], [157, 232], [157, 241], [159, 221], [161, 177], [161, 198], [161, 248], [161, 251], [162, 184], [162, 191], [162, 220], [164, 166], [164, 244], [165, 168], [166, 225], [166, 244], [167, 197], [167, 217], [169, 175], [170, 197], [170, 204], [171, 188], [172, 206], [172, 227], [173, 176], [174, 208], [175, 180], [175, 204], [176, 219], [176, 230], [177, 191], [177, 205], [177, 229], [178, 207], [178, 228], [179, 230], [183, 210], [184, 191], [184, 237], [184, 244], [186, 206], [188, 202], [188, 221], [188, 223], [188, 248], [189, 202], [191, 199], [191, 205], [194, 225], [194, 236], [196, 224], [196, 233], [197, 243], [199, 244], [200, 205], [200, 230], [200, 239], [202, 221], [203, 215], [203, 218], [206, 227], [209, 240], [210, 242], [213, 250], [214, 217], [214, 242], [217, 224], [217, 242], [217, 243], [219, 230], [222, 223], [223, 248], [225, 245], [226, 245], [228, 238], [229, 238], [230, 239], [230, 247], [237, 244], [248, 251]]
fig, ax = plt.subplots(figsize=(10, 10))


def makePositions(ccs):
    positions = {}
    c = 1
    for i, cc in enumerate(ccs):
        c += 15
        for j in cc:
            positions[j] = (random.random() * 2 * c, random.random() * 2 * c - 1)
    return positions


def makeNodes(ccs):
    nodes = []
    for i, cc in enumerate(ccs):
        for j in cc:
            nodes.append(j)
    return nodes


def nodeColors(ccs, palette):
    colors_ = {}
    for i, cc in enumerate(ccs):
        for j in cc:
            # colors_.append(palette[i])
            colors_[j] = palette[i]
    return colors_


def edgeColors(edge_list, node_colors):
    colors_ = []
    for i, edges in enumerate(edge_list):
        colors_.append(node_colors[edges[0]])
    return colors_


nodes = makeNodes(ccs=ccs)

node_colors = nodeColors(ccs=ccs, palette=palette)


options = {
    "font_size": 8,
    "node_size": 200,
    "node_color": [*node_colors.values()],
    "edgecolors": [*node_colors.values()],
    "linewidths": 1,
    "width": 1,
}

G = nx.Graph()
G.add_nodes_from(makeNodes(ccs))
G.add_edges_from(edge_list)

edges = G.edges()

edge_colors = edgeColors(edge_list=edges, node_colors=node_colors)

pos=nx.spring_layout(G)
# pos=nx.circular_layout(G)
# pos=nx.spiral_layout(G)
# print(G.nodes())
nx.draw_networkx(
    G, pos,
    edge_color=edge_colors,
    with_labels=False,
    # with_labels=True,
    **options
)

ac = plt.gca()
ac.margins(0.20)
plt.axis("off")
fig.subplots_adjust(
            top=0.88,
            bottom=0.10,
            left=0.08,
            right=0.98,
            hspace=0.60,
            wspace=0.30
        )
plt.show()